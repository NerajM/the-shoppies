{"version":3,"sources":["Components/MovieGrid.js","Icons/ArrowIcon.js","Icons/DeleteIcon.js","Components/NominationDrawer.js","Icons/SearchIcon.js","App.js","index.js"],"names":["movieGridStyles","makeStyles","gridListTileBar","background","button","padding","backgroundColor","color","margin","MovieGrid","searchResults","handleNominations","nominations","nominationIdList","classes","uniqueSearchResults","Map","map","movie","imdbID","values","moviesData","forEach","searchResult","Title","Year","Poster","push","id","title","year","poster","GridList","cellHeight","cols","spacing","GridListTile","src","alt","GridListTileBar","className","subtitle","actionIcon","Button","target","href","onClick","disabled","includes","length","ArrowIcon","xmlns","height","viewBox","width","fill","d","DeleteIcon","nominationDrawerStyles","header","display","alignItems","fontFamily","fontSize","drawerPaper","nomination","justifyContent","marginLeft","NominationDrawer","showNominationDrawer","handleShowNominationDrawer","Drawer","anchor","open","onClose","paper","IconButton","size","aria-label","classkey","updatedNominationList","filter","removeNomination","SearchIcon","appStyles","searchField","borderColor","searchFieldLabel","searchFieldContainer","paddingBottom","menuButtonContainer","menuButton","noResultsMessage","App","useState","showBanner","setShowBanner","setShowNominationDrawer","setSearchResults","setNominations","fetchResults","e","a","keyCode","axios","get","value","result","data","Search","newNominations","showDrawer","TextField","label","variant","onKeyDown","InputProps","startAdornment","InputAdornment","position","InputLabelProps","Dialog","DialogTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f43b1ac.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Button,\r\n  GridList,\r\n  GridListTileBar,\r\n  GridListTile,\r\n} from \"@material-ui/core\";\r\n\r\nconst movieGridStyles = makeStyles({\r\n  gridListTileBar: {\r\n    background: \"rgba(0, 0, 0, 0.7)\",\r\n  },\r\n  button: {\r\n    padding: \"6px\",\r\n    backgroundColor: \"#008060\",\r\n    color: \"white\",\r\n    margin: \"0px 4px 4px 0px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#004c3f\",\r\n    },\r\n    \"&:disabled\": {\r\n      backgroundColor: \"#004c3f\",\r\n    },\r\n  },\r\n});\r\n\r\nexport const MovieGrid = ({\r\n  searchResults,\r\n  handleNominations,\r\n  nominations,\r\n  nominationIdList,\r\n}) => {\r\n  const classes = movieGridStyles({});\r\n\r\n  const addNomination = (id, title, year, poster) => {\r\n    handleNominations([...nominations, { id, title, year, poster }]);\r\n  };\r\n\r\n  const uniqueSearchResults = [\r\n    ...new Map(searchResults?.map((movie) => [movie.imdbID, movie])).values(),\r\n  ];\r\n\r\n  const moviesData = [];\r\n\r\n  uniqueSearchResults?.forEach((searchResult) => {\r\n    const { imdbID, Title, Year, Poster } = searchResult;\r\n    moviesData.push({ id: imdbID, title: Title, year: Year, poster: Poster });\r\n  });\r\n\r\n  return (\r\n    <GridList cellHeight={300} cols={5} spacing={10}>\r\n      {moviesData.map((movie) => (\r\n        <GridListTile key={movie.id}>\r\n          <img\r\n            src={\r\n              movie.poster !== \"N/A\"\r\n                ? movie.poster\r\n                : \"https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg\"\r\n            }\r\n            alt={movie.title}\r\n          />\r\n          <GridListTileBar\r\n            className={classes.gridListTileBar}\r\n            title={movie.title}\r\n            subtitle={movie.year}\r\n            actionIcon={\r\n              <div>\r\n                <Button\r\n                  className={classes.button}\r\n                  target=\"_blank\"\r\n                  href={`https://www.imdb.com/title/${movie.id}/`}\r\n                >\r\n                  IMDB\r\n                </Button>\r\n                <Button\r\n                  className={classes.button}\r\n                  onClick={() =>\r\n                    addNomination(\r\n                      movie.id,\r\n                      movie.title,\r\n                      movie.year,\r\n                      movie.poster\r\n                    )\r\n                  }\r\n                  disabled={\r\n                    nominationIdList.includes(movie.id) |\r\n                    (nominationIdList.length === 5)\r\n                  }\r\n                >\r\n                  Nominate\r\n                </Button>\r\n              </div>\r\n            }\r\n          ></GridListTileBar>\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  );\r\n};\r\n","import React from \"react\";\r\nexport const ArrowIcon = () => (\r\n  <>\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#004c3f\"\r\n    >\r\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n      <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\" />\r\n    </svg>\r\n  </>\r\n);\r\n","import React from \"react\";\r\nexport const DeleteIcon = () => (\r\n  <>\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#900C3F\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4z\" />\r\n    </svg>\r\n  </>\r\n);\r\n","import React from \"react\";\r\nimport { Drawer, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport { ArrowIcon } from \"../Icons/ArrowIcon\";\r\nimport { DeleteIcon } from \"../Icons/DeleteIcon\";\r\n\r\nconst nominationDrawerStyles = makeStyles({\r\n  header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    color: \"#004c3f\",\r\n    fontFamily: \"helvetica\",\r\n    fontSize: \"24pt\",\r\n  },\r\n  drawerPaper: {\r\n    width: \"20%\",\r\n    backgroundColor: \"#fbf7ed\",\r\n  },\r\n  nomination: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    color: \"#004c3f\",\r\n    fontFamily: \"helvetica\",\r\n    marginLeft: \"5px\",\r\n    fontSize: \"16pt\",\r\n  },\r\n});\r\n\r\nexport const NominationDrawer = ({\r\n  showNominationDrawer,\r\n  handleShowNominationDrawer,\r\n  handleNominations,\r\n  nominations,\r\n}) => {\r\n  const classes = nominationDrawerStyles({});\r\n\r\n  const removeNomination = (id) => {\r\n    const updatedNominationList = nominations.filter(\r\n      (nomination) => nomination.id !== id\r\n    );\r\n    handleNominations(updatedNominationList);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"right\"\r\n      open={showNominationDrawer}\r\n      onClose={() => handleShowNominationDrawer(false)}\r\n      classes={{ paper: classes.drawerPaper }}\r\n    >\r\n      <div className={classes.header}>\r\n        <IconButton\r\n          size=\"medium\"\r\n          aria-label=\"Close Nomination Drawer\"\r\n          onClick={() => handleShowNominationDrawer(false)}\r\n        >\r\n          <ArrowIcon />\r\n        </IconButton>\r\n        <p>Your Nominations</p>\r\n      </div>\r\n      {nominations.map((nomination) => (\r\n        <div classkey={nomination.id} className={classes.nomination}>\r\n          <p>\r\n            {nomination.title} ({nomination.year})\r\n          </p>\r\n          <IconButton\r\n            aria-label=\"Remove Nomination\"\r\n            onClick={() => removeNomination(nomination.id)}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </div>\r\n      ))}\r\n    </Drawer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nexport const SearchIcon = () => (\r\n  <>\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#004c3f\"\r\n    >\r\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n      <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\r\n    </svg>\r\n  </>\r\n);\r\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  makeStyles,\n  TextField,\n  Button,\n  InputAdornment,\n  Dialog,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { MovieGrid } from \"./Components/MovieGrid\";\nimport { NominationDrawer } from \"./Components/NominationDrawer\";\nimport { SearchIcon } from \"./Icons/SearchIcon\";\n\nconst appStyles = makeStyles({\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    fontFamily: \"helvetica\",\n    color: \"#004c3f\",\n  },\n  button: {\n    marginLeft: \"5px\",\n    padding: \"16px\",\n    backgroundColor: \"#008060\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"#004c3f\",\n    },\n  },\n  searchField: {\n    color: \"#004c3f\",\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#008060\",\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#004c3f\",\n    },\n  },\n  searchFieldLabel: {\n    color: \"#008060\",\n    \"&.Mui-focused\": {\n      color: \"#004c3f\",\n    },\n  },\n  searchFieldContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingBottom: \"20px\",\n  },\n  menuButtonContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  menuButton: {\n    margin: \"0px 2px 2px 0px\",\n    padding: \"10px\",\n    backgroundColor: \"#008060\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"#004c3f\",\n    },\n  },\n  noResultsMessage: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    fontFamily: \"helvetica\",\n    color: \"#900C3F\",\n    fontSize: \"16pt\",\n  },\n});\n\nexport const App = () => {\n  const classes = appStyles({});\n  const [showBanner, setShowBanner] = useState(false);\n  const [showNominationDrawer, setShowNominationDrawer] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const [nominations, setNominations] = useState([]);\n\n  const fetchResults = async (e) => {\n    if (e.keyCode === 13) {\n      const result = await axios.get(\n        `https://www.omdbapi.com/?apikey=b6c68bdb&s=${e.target.value}&type=movie`\n      );\n      setSearchResults(result.data.Search);\n    }\n  };\n\n  const handleNominations = (newNominations) => {\n    setNominations(newNominations);\n    setShowBanner(newNominations.length === 5);\n  };\n\n  const handleShowNominationDrawer = (showDrawer) => {\n    setShowNominationDrawer(showDrawer);\n  };\n\n  const nominationIdList = nominations.map((nomination) => nomination.id);\n\n  return (\n    <>\n      <div className={classes.header}>\n        <h1>The Shoppies: Movie Awards for Entrepreneurs</h1>\n        <Button\n          className={classes.button}\n          onClick={() => setShowNominationDrawer(true)}\n        >\n          View Nominations\n        </Button>\n      </div>\n      <NominationDrawer\n        showNominationDrawer={showNominationDrawer}\n        handleShowNominationDrawer={handleShowNominationDrawer}\n        handleNominations={handleNominations}\n        nominations={nominations}\n      />\n      <div className={classes.searchFieldContainer}>\n        <TextField\n          className={classes.searchField}\n          label=\"Search for a movie\"\n          variant=\"outlined\"\n          onKeyDown={fetchResults}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon></SearchIcon>\n              </InputAdornment>\n            ),\n            className: classes.searchField,\n          }}\n          InputLabelProps={{\n            className: classes.searchFieldLabel,\n          }}\n        />\n      </div>\n      {searchResults ? (\n        <MovieGrid\n          searchResults={searchResults}\n          handleNominations={handleNominations}\n          nominations={nominations}\n          nominationIdList={nominationIdList}\n        />\n      ) : (\n        <p className={classes.noResultsMessage}>\n          Whoops! No movies found, try another movie.\n        </p>\n      )}\n      <Dialog open={showBanner} onClose={() => setShowBanner(false)}>\n        <DialogTitle>\n          Congratulations! You have reached 5 nominations!\n        </DialogTitle>\n        <div className={classes.menuButtonContainer}>\n          <Button\n            className={classes.menuButton}\n            onClick={() => setShowBanner(false)}\n          >\n            Close\n          </Button>\n          <Button\n            className={classes.menuButton}\n            onClick={() => {\n              setShowBanner(false);\n              handleShowNominationDrawer(true);\n            }}\n          >\n            View Nominations\n          </Button>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}